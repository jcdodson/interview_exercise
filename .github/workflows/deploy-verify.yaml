name: Deploy and Verify

on:
  push:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Inject Git SHA into package.json
        run: |
          jq '.version="${{ github.sha }}"' package.json > tmp.json && mv tmp.json package.json

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_REPO }}:${{ github.run_number }}
          labels: |
              version=${{ github.run_number }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            cd ~/app
            export DEPLOY_VERSION="${{ github.run_number }}"
            
            sudo docker-compose down

            sudo docker-compose pull

            sudo docker-compose up -d --force-recreate

      - name: Verify
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            CONTAINER_ID=$(sudo docker ps -aqf "name=${{ secrets.DOCKER_HUB_REPO }}")

            if [ -z "$CONTAINER_ID" ]; then
              echo "No running container found"
              sudo docker ps -a
              exit 1
            fi

            echo "Found running container: $CONTAINER_ID"

            DEPLOYED_VERSION=$(sudo docker inspect --format '{{ index .Config.Labels "version" }}' "$CONTAINER_ID")
            EXPECTED_VERSION="${{ github.run_number }}"

            echo "Expected version: $EXPECTED_VERSION"
            echo "Deployed version: $DEPLOYED_VERSION"

            if [ "$DEPLOYED_VERSION" == "$EXPECTED_VERSION" ]; then
              echo "Version match: $DEPLOYED_VERSION"
            else
              echo "Version mismatch! Expected $EXPECTED_VERSION, got $DEPLOYED_VERSION"
              exit 1
            fi